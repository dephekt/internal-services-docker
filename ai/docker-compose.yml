services:
  litellm-db:
    image: postgres:17
    container_name: litellm-db
    restart: always
    environment:
      - POSTGRES_DB=litellm
      - POSTGRES_USER=litellm
      - POSTGRES_PASSWORD=${LITELLM_DB_PASSWORD}
    volumes:
      - litellm-db:/var/lib/postgresql/data
    networks:
      - litellm-internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U litellm -d litellm"]
      interval: 30s
      timeout: 10s
      retries: 3

  litellm:
    image: ghcr.io/berriai/litellm-database:main-stable
    container_name: litellm
    restart: always
    depends_on:
      litellm-db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://litellm:${LITELLM_DB_PASSWORD}@litellm-db:5432/litellm
      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY}
      - LITELLM_SALT_KEY=${LITELLM_SALT_KEY}
      - AWS_BEARER_TOKEN_BEDROCK=${AWS_BEARER_TOKEN_BEDROCK}
      - AWS_REGION_NAME=${AWS_REGION_NAME}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - LITELLM_LOG=INFO
    volumes:
      - ./litellm/config.yaml:/app/config.yaml:ro
    networks:
      - proxy
      - litellm-internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.litellm.rule=Host(`${LITELLM_DOMAIN}`)"
      - "traefik.http.routers.litellm.entrypoints=websecure"
      - "traefik.http.routers.litellm.tls.certresolver=cf"
      - "traefik.http.services.litellm.loadbalancer.server.port=4000"
      - "traefik.docker.network=proxy"
      - "com.centurylinklabs.watchtower.enable=true"
    command: ["--config", "/app/config.yaml", "--port", "4000", "--num_workers", "1"]

  open-webui:
    image: ghcr.io/open-webui/open-webui:ollama
    container_name: open-webui
    restart: always
    environment:
      - ENABLE_PERSISTENT_CONFIG
      - WEBUI_URL
      - WEBUI_NAME
      - WEBUI_SECRET_KEY
      - WEBHOOK_URL
      - ADMIN_EMAIL
      - ENABLE_VERSION_UPDATE_CHECK
      - CORS_ALLOW_ORIGIN
      - JWT_EXPIRES_IN
      - WEBUI_API_ENV
      - AI_FQDN
      - ENABLE_OAUTH_SIGNUP
      - ENABLE_OAUTH_GROUP_MANAGEMENT
      - ENABLE_OAUTH_GROUP_CREATION
      - OAUTH_GROUP_CLAIM
      - OAUTH_CLIENT_ID
      - OAUTH_CLIENT_SECRET
      - OPENID_PROVIDER_URL
      - OAUTH_PROVIDER_NAME
      - OPENID_REDIRECT_URI
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openwebui.rule=Host(`${AI_FQDN}`)"
      - "traefik.http.routers.openwebui.entrypoints=websecure"
      - "traefik.http.routers.openwebui.tls.certresolver=cf"
      - "traefik.http.services.openwebui.loadbalancer.server.port=8080"
      - "traefik.docker.network=proxy"
      - "com.centurylinklabs.watchtower.enable=true"
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
      - open-webui:/app/backend/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600 --label-enable

networks:
  proxy:
    external: true
  litellm-internal:
    driver: bridge

volumes:
  ollama:
    external: true
  open-webui:
    external: true
  litellm-db:
    external: false
